apiVersion: 0.5.0

meta:
  name: duckchess-fluvio
  version: 0.1.0
  namespace: duckchess

topics:
  turns:
    schema:
      value:
        type: fl-turn
  moves:
    schema:
      value:
        type: fl-move
  matchmaking-requests:
    schema:
      value:
        type: fl-matchmaking-request
  matchmaking-responses:
    schema:
      value:
        type: fl-matchmaking-response

types:
  # frontend sends turns
  fl-turn:
    type: object
    properties:
      game-id:
        type: u64
      piece-idx:
        type: u32
      move-idx:
        type: u32
  # frontend recieves moves
  fl-move:
    # full type is complicated, so we keep it serialized
    type: string
  fl-matchmaking-request:
    type: enum
    oneOf:
      start-matchmaking:
        type: start-matchmaking
      cancel-matchmaking:
        type: cancel-matchmaking
      change-elo-range:
        type: change-elo-range
  start-matchmaking:
    type: object
    properties:
      player-id:
        type: u64
      elo:
        type: f32
      elo-range:
        type: f32
      time-started:
        type: u64
  cancel-matchmaking:
    type: object
    properties:
      player-id:
        type: u64
  change-elo-range:
    type: object
    properties:
      player-id:
        type: u64
      elo-range:
        type: f32
  fl-matchmaking-response:
    type: object
    properties:
      player-id:
        type: u64
      opponent-id:
        type: u64
      existing:
        type: bool

states:
  board-state:
    type: keyed-state
    properties:
      key:
        type: string
      value:
        type: arrow-row
        properties:
          board:
            # sdf doesn't allow arbitrary types in arrow-row, so we need to keep it serialized in here
            type: string
  matchmaking-state:
    type: keyed-state
    properties:
      key:
        type: u64
      value:
        type: arrow-row
        properties:
          elo:
            type: f32
          elo-range:
            type: f32
          time-started:
            type: u64

functions:
  turn-assign-key:
    operator: assign-key
    inputs:
      - name: turn
        type: fl-turn
    output:
      type: u64

  run-move:
    operator: update-state
    states:
      - name: board-state
    inputs:
      - name: move
        type: fl-move
    sinks:
      - type: topic
        id: moves
  generate-moves:
    operator: flat-map
    states:
      - name: board-state
    inputs:
      - name: turn
        type: fl-turn
    output:
      type: fl-move
  generate-responses:
    operator: update-state
    states:
      - name: board-state
    inputs:
      - name: turn
        type: fl-turn
  check-for-game-over:
    operator: flat-map
    states:
      - name: board-state
    inputs:
      - name: turn
        type: fl-turn
    output:
      type: fl-move
  move-assign-key:
    operator: assign-key
    inputs:
      - name: move
        type: fl-move
    output:
      type: u64
  matchmaking-request-assign-key:
    operator: assign-key
    inputs:
      - name: matchmaking-request
        type: fl-matchmaking-request
    output:
      type: u64
  matchmaking-response-assign-key:
    operator: assign-key
    inputs:
      - name: matchmaking-response
        type: fl-matchmaking-response
    output:
      type: u64
  matchmake:
    operator: flat-map
    inputs:
      - name: matchmaking-request
        type: fl-matchmaking-request
    output:
      type: fl-matchmaking-response
  matchmaking-request-update:
    operator: update-state
    states:
      - name: matchmaking-state
    inputs:
      - name: matchmaking-request
        type: fl-matchmaking-request
  matchmaking-response-update:
    operator: update-state
    states:
      - name: matchmaking-state
    inputs:
      - name: matchmaking-response
        type: fl-matchmaking-response
  matchmaking-response-update-games:
    operator: update-state
    states:
      - name: board-state
    inputs:
      - name: matchmaking-response
        type: fl-matchmaking-response

dev:
  converter: raw
